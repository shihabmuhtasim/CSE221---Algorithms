# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mEbuGRiPYo6zMP_ARfiCt26iSGoS8FsH
"""

#3
input_1= open("input3(i).txt",'r')
out_1= open("output3(i).txt", 'w')
n= input_1.readline()
val= input_1.readline()
b= val.split()
arr=[]
for i in b:
  arr.append(int(i))
# i)
def partition (arr, low, high):
  pivot = arr[high]
  i = low-1
  for j in range (low, high):
    if (arr[j] < pivot):
      i=i+1
      arr[i],arr[j]=arr[j],arr[i]
  arr[i + 1],arr[high]=arr[high],arr[i + 1]
  return (i + 1)

def quickSort(arr, low, high):
  if (low < high):
    pi = partition(arr, low, high)
    quickSort(arr, low, pi-1) 
    quickSort(arr, pi + 1, high)

quickSort(arr,0,len(arr)-1)
str=''
for i in arr:
  str+=f"{i} "
print("Quick sort:",str,file=out_1)

#ii
input_2= open("input3(ii).txt",'r')
out_2= open("output3(ii).txt", 'w')
val= input_2.readline()
b= val.split()
arr_2=[]
for i in b:
  arr_2.append(int(i))
read_k_vals=input_2.readlines()
k_val=[]
for i in read_k_vals:
  temp=i.strip("\n")
  k_val.append(int(temp))

def findK(arr, k):
  for i in range(len(arr)-1, -1, -1):
    r = partition(arr, 0, i)
    if (r + 1 == k):
      break
  print("Kth element:",arr[r],file=out_2)

for i in k_val:
  findK(arr_2, i)