# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LJB68Xv1dNf2myFglI0JvshFmeuzpPUP
"""

#5
inp=open("input5.txt","r")
out=open("output5.txt","w")
cases=int(inp.readline())
for i in range(cases):
  n,m=inp.readline().split()
  if m=="0":
    print("0",file=out)
    s=inp.readline()
  else:
    dic={}
    queue=[]
    extra=[]
    for j in range(int(m)):
      v_1,v_2,edge=inp.readline().split()
      if v_1 not in queue:
        queue.append(v_1)
        extra.append(v_1)
      if v_2 not in queue:
        queue.append(v_2)
        extra.append(v_2)
      if v_1 not in dic:
        dic[v_1]=[(v_2,int(edge))]
      else:
        dic[v_1].append((v_2,int(edge)))
    extra.sort()
    queue.sort()
    temp=inp.readline() #source
    def find_idx(extra,temp):
      id=None
      for i in range(len(extra)):
        if int(extra[i])==int(temp):
          id=i
      return id
    id=find_idx(extra,temp) #source index [will need in the last part]
    queue[0],queue[id]=queue[id],queue[0]
    extra[0],extra[id]=extra[id],extra[0]
    # print("DIC",dic)
    #---------------------------
    def Not_empty(arr):
      flag=False
      for i in arr:
        if i!=0:
          flag=True
          break
        else:
          flag=False
      return flag
    #-------------------
    
    d=[-1000]*len(queue)
    p=[0]*len(queue)
    d[0]=10000

    while Not_empty(queue):
      max=-10000
      idx=None
      for i in range(len(d)):
        if d[i]>max:
          if queue[i]!=0:    
            max=d[i]
            idx=i
      u=queue[idx]
      queue[idx]=0 
      d_u=d[idx]
      if u in dic.keys():
        adj=dic[u]
        for tup in adj:
          v_idx=find_idx(extra,tup[0])
          d_v=d[v_idx]
          alt=min(d_u,tup[1])
          if alt>d_v:
            d[v_idx]=alt
            p[v_idx]=u
    extra[0],extra[id]=extra[id],extra[0]
    p[0],p[id]=p[id],p[0]
    d[0],d[id]=d[id],d[0]
    # print("EXTRA",extra)
    # print("FINAL",d)
    # print("PARENT",p)

    for i in range(len(p)):
        if p[i]==0:
          if i==id:
            print(0,end=" ",file=out)
          else:
            print(-1,end=" ",file=out)
        else:
          print(d[i],end=" ",file=out)

    print("",file=out)